Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\91879> git --version
git version 2.37.1.windows.1
PS C:\Users\91879> cd D:\git\gittest
PS D:\git\gittest> git init
Initialized empty Git repository in D:/git/gittest/.git/
PS D:\git\gittest> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test file.txt

nothing added to commit but untracked files present (use "git add" to track)
PS D:\git\gittest> git add test file
fatal: pathspec 'test' did not match any files
PS D:\git\gittest> git add "test file"
fatal: pathspec 'test file' did not match any files
PS D:\git\gittest> git add test file.txt
fatal: pathspec 'test' did not match any files
PS D:\git\gittest> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        T1.txt

nothing added to commit but untracked files present (use "git add" to track)
PS D:\git\gittest> git add T.txt
fatal: pathspec 'T.txt' did not match any files
PS D:\git\gittest> git add T1.txt
PS D:\git\gittest> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   T1.txt

PS D:\git\gittest> git commit -m "T1.txt file add in gittest"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got '91879@Jayesh.(none)')
PS D:\git\gittest> git config --global 91879@Jayesh
error: key does not contain a section: 91879@Jayesh
PS D:\git\gittest> git config --global user.email"jayeshlayacha@gmail.com"
PS D:\git\gittest> git config --global user.name"iJayeshLaycha"
PS D:\git\gittest> git commit -m "T1.txt file add in gittest"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got '91879@Jayesh.(none)')
PS D:\git\gittest> git config --global user.email "jayeshlayacha@gmail.com"
PS D:\git\gittest> git config --global user.name "iJayeshLaycha"
PS D:\git\gittest> git commit -m "T1.txt file add in gittest"
[master (root-commit) 511b976] T1.txt file add in gittest
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 T1.txt
PS D:\git\gittest>

PS D:\git\gittest> git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

PS D:\git\gitte